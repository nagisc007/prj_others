# -*- coding: utf-8 -*-
"""Story: yubijo chapter01.
"""
import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../..'))
sys.path.append('storybuilder')

from storybuilder.builder import world as wd


# episodes
def ep_avant(w: wd.World):
    z = w.zenzo
    lunchtime = w.day.meet.elapsed(hour=12)
    lunchafter = lunchtime.elapsed(hour=2)
    scenes = [
            w.tag.comment("善蔵（他）の一人称が原則"),
            w.scene("男むさい職場",
                z.feel().d("目の前を湯気と汗とそれからよく分からない雫が落ちていく"),
                w.tencho.talk().t("何やってんだ！",
                    "まだ餃子の皿洗えてねえのか！"),
                z.reply().t("すみません！",
                    "次で洗えます！"),
                z.look().d("と返したものの",
                    "まだ$zenzoの右手側でぐおんぐおん音を鳴らしている箱型の食洗機は赤いランプが点いたままだ。",
                    "早く終われよこのチキショウ。",
                    "という言葉をどこにも吐き出せないまま",
                    "ただひたすらに目の前のシンクに溜まった泡なのか皿なのかコップなのか分からない代物へとゴム手袋の手を突っ込んでは",
                    "灰色のプレートラックに次々と泡塗れの有象無象を並べていく"),
                w.tencho.talk().t("次じゃなく今くれってんだよ！",
                    "このドアホォが！"),
                z.look().d("最近店の売上が振るわずにエリアマネージャーからどやされているらしい店長は",
                    "ランチタイムで血圧上昇中なのか",
                    "いつもに況して声がでかく",
                    "言葉が乱暴だ"),
                z.look().d("キッチンの喧騒に紛れてしまう小さな電子音を何とか捉えると",
                    "$na_zenzoはレバーを持ち上げて蒸気を吹き出す食洗機から洗い終えたばかりの食器類が並ぶラックを右手側に押しやる。",
                    "続いて既に並べ終えたもう片方のラックをセットしてレバーを下げると",
                    "息つく暇もなく再び水と泡の大合奏が銀色の箱の中で始まる"),
                z.talk().t("餃子皿です！"),
                w.tencho.reply("おせーよ！"),
                z.look().d("文句を言いつつも受け取ると",
                    "焼き上がったところの餃子を盛り付けてデシャップに置いて",
                    "すぐコンロに掛かったままの中華鍋に戻る"),
                z.look().d("口は悪いが手さばきや動作の切れは幾つかアルバイトとして飲食店を渡り歩いてきた$na_zenzoから見ても",
                    "有能な方だと思えた"),
                z.think().d("それでも両隣で無言のまま調理を続ける同僚バイトたちは",
                    "最近前髪が後退しつつある店長のことを「さっさと死ねばいい」と陰口を叩いていた"),
                w.mikami.talk().t("$zenzo", "グラスまだ？"),
                z.look().d("ホールの$mikamiだ。",
                    "肩までの黒髪を右耳の裏側でくるりとまとめ",
                    "彼女の意志の強さの表明であるような太眉が逆ハの字に$na_zenzoに向けられていた"),
                z.ask().t("今並べますよ。",
                    "それより今日のお客の入り具合どうです？"),
                w.mikami.reply("普通じゃないかしら"),
                z.be(w.stage.chineseshop, lunchtime),
                z.look("店内").d("そう答えが返ってきたが",
                    "彼女の肩越しにホールを見やると入り口の方までずらりと客が立って待っていた。",
                    "それも何故かその半数以上が若そうな女性客ばかりだ。",
                    "この近所で何かイベントでもあるのだろうか"),
                z.talk().t("どこが普通なんですか。",
                    "連休のランチタイムもいいとこじゃないですか"),
                z.do().d("トレィに並べ終えたグラスを彼女に差し出しながらそう言うと、"),
                w.mikami.talk().t("その目玉も洗った方がいいんじゃない？"),
                z.look().d("何故か$na_zenzoを睨みつけてからホールに出て行ってしまった"),
                z.talk().t("相変わらず冗談キツイぜ$part_mikami"),
                z.look("満席", w.i.moreusual.flag()).d("試しにもう一度覗いてみたが",
                    "やはり$na_zenzoには店の壁に沿ってずらりと並ぶ大量の若い女性客が",
                    "席が空くのを今か今かと待ち構えている様子が見えた"),
                z.talk().t("やっぱ混みまくりじゃないすか"),
                z.do("皿を割る").d("新しく運び込まれた皿を手に取り",
                        "シンクに向き直って放り込もうとした",
                        "その視界が一瞬ぐらつく"),
                w.tencho.talk().t("おい！",
                        "$zenzo！",
                        "お前またやりやがったのか！"),
                z.hear().d("何のことかと思って足元を見ると",
                        "そこには複数枚の大皿が粉々になって散らばっていた"),
                w.tencho.talk().t("これで今日何枚目だと思ってんだ！",
                        "お前はバイト代いらねえのか！"),
                z.reply().t("す、すみません！"),
                z.do(w.tencho, "angry").d("咄嗟に頭を下げたが",
                        "そんなもので店長の怒りが収まるはずもなく",
                        "何度も足元の「店長専用」と書かれたダンボール箱に蹴りを入れていた"),
                ),
            w.scene("バイトクビだってよ",
                z.do().d("何とか繁忙時間を乗り切った$heroは",
                    "一人ロッカー室で汗をたっぷり吸ったシャツを脱ごうとしていた"),
                z.talk(w.tencho, "疲れてるか？"),
                z.look().d("そこに店長が入ってきて",
                    "額に張り付きそうになっていた帽子を取ると",
                    "パイプの丸椅子を軋ませて座り",
                    "煙草を吸い始めた"),
                w.tencho.talk(w.i.rumor_ghostdead).t("お前聞いたことあるか。",
                    "知らない奴を最近よく見るなと思ってたら",
                    "いつの間にかそいつらが家の中まで入ってくるようになって",
                    "ある日突然蒸発したように消えるんだそうだ"),
                z.reply().t("か、怪談話すか？"),
                z.think().d("$tenchoがいきなり話題を振ってくるのは",
                    "何も珍しいことじゃなかった。",
                    "ただやたら自分の顔を見てくるので",
                    "そろそろ今日の小言が始まるのかと$heroは覚悟を決める"),
                w.tencho.talk().t("知らない間に幽霊が見えるようになって",
                    "そのうちに自分まで幽霊になっちまうっていうので",
                    "世間じゃ『幽霊死』って呼ばれてるんだとさ"),
                z.know(w.tencho, w.i.rumor_ghostdead).d("その現象も言葉も初耳だった"),
                z.have(w.i.salary, w.tencho),
                w.tencho.talk().t("$meはさ",
                    "これまでそういうお化けだとか妖怪だとかさ",
                    "ＵＦＯでも何でもさ",
                    "いる訳ねえし信じてる奴みんな馬鹿だろうって",
                    "そう思ってたくらいなんだわ"),
                z.reply().t("はあ"),
                w.tencho.talk(w.i.allupbusiness.flag(), "お前が来てから").t("お前の所為とは思ってないんだが",
                    "どうもお前がうちに来てからどんどん売上が落ちてるんだよな"),
                z.think().d("ああ、そっちか。",
                    "と内心では思いながらも",
                    "$heroは黙って頷く"),
                w.tencho.talk().t("別に信じてる訳じゃねえんだが",
                    "お前さ",
                    "ひょっとしてその幽霊なんじゃねえか？"),
                z.reply().t("あの$tencho", "$meは"),
                w.tencho.talk().t("悪いが$hata", "ここ辞めてくれねえかな？"),
                z.talk(w.tencho, w.i.firejob),
                z.know(w.i.firejob),
                ),
            w.scene("そうだ異世界に行こう",
                z.look().d("大通りを窓全開にして走り抜けて行った運送業者のトラックからは",
                    "最近流行りらしい$natsumeの演歌が大ボリュームで漏れ響いていた"),
                z.look(w.stage.city13).d("汗で背中に張り付く下着を気持ち悪いと感じつつ",
                    "$heroは上着のボタンシャツの袖を捲る。",
                    "右肩に引っ掛けた細身のリュックにはつい十分ほど前に渡された給料袋が差し込んであったが",
                    "その数千円が彼の全財産と言っても良かった"),
                w.stage.city13.explain("都心から離れた町").d("ここ$st_city13は都心から随分と距離があるというのにも関わらず",
                    "昼夜問わずにかなりの交通量がある。",
                    "しかもその大半は何らかを運んでいる",
                    "所謂トラックと呼ばれるものだ"),
                z.go(w.stage.street).d("$heroは狭い歩道に佇みながら",
                    "一冊の文庫本を",
                    "ブックカバーも着けずに開いていた"),
                z.look(w.truck),
                z.think("近所に工場が多い"),
                z.remember(w.i.rumor_ghosthouse.flag()),
                z.go(w.stage.bookstore),
                z.have(w.GAnovel).d("本のタイトルは$GAtitleという",
                    "それだけで内容を言い表しているような気がしないでもないが",
                    "流石に長過ぎて誰も正式名称を呼ばないという",
                    "最近ありがちな商品展開をしている作品だ"),
                z.think().d("ちなみに通称は「$GAshorttitle」である"),
                z.think().d("そういった小説を読むことは数少ない$heroの趣味だったが",
                    "ただただ個人の欲望の垂れ流しを肯定するだけの内容を",
                    "思考停止の現実逃避だと",
                    "ネット上の知人に馬鹿にされることも多かった"),
                z.look(w.GAnovel, w.i.beauty),
                z.think("付き合いたい").d("それでも今$heroは純粋に思うのだ"),
                z.think(w.i.zenzolove).t("美少女と付き合いたい……"),
                z.think().d("そしてその為にはどうにかこうにか「異世界」というものに行かなければならない"),
                z.remember(w.GAnovel, "異世界もの"),
                z.be(w.i.despair),
                z.think(w.i.suicide, "異世界に行ける"),
                ),
            w.scene("トラックバイバイ",
                z.go(w.stage.street),
                z.look().d("目の前を何台もトラックが連なり",
                    "軽快に走り抜けていく"),
                z.do(w.i.suicide, "$want").d("痛いだろうか"),
                z.do(w.i.hittruck, w.i.suicide).d("色々と迷惑が掛かるだろうか"),
                w.truckdriver.look(w.zenzo),
                z.look().d("ふと視線を上げるとスマートフォンを片手に持ちながら運転席に座っている髭面の男性と",
                    "目が合った"),
                z.feel("blackout").d("彼はブレーキに足を置いただろう"),
                z.think().d("けれどその結果を知ることは",
                    "$heroには叶わなかった"),
                z.think().d("何故なら彼の意識はスマホの電源が切れた時のように",
                    "一瞬でブラックアウトしてしまったからだ"),
                ),
            ]
    return [w.chaptertitle("そうだ異世界に行こう"),
            *scenes,
            ]


def ep_meetbijo(w: wd.World):
    z = w.zenzo
    akebi = w.akebi
    scenes = [
            w.scene("目覚めたら美女",
                z.look(w.akebi, "美女"),
                z.look(w.stage.ghosthome, w.day.meet),
                z.meet(w.akebi),
                z.ask(akebi, "自分はどうしてここに？"),
                akebi.talk(w.zenzo, "家の前で寝ていた"),
                z.ask(w.akebi, "彼女のこと"),
                w.tag.comment("先月死んだがそれを仄かに読み取らせる"),
                akebi.reply("仕事はやめた"),
                akebi.talk("大好きな人にフラレて"),
                z.feel("同情"),
                z.talk(akebi, "励ます"),
                akebi.reply("あなたみたいな人なら良かったのに"),
                z.do(w.akebi, "love", "$want"),
                akebi.reply(w.zenzo, "照れる"),
                akebi.ask("ご飯食べます？"),
                akebi.go("台所"),
                ),
            w.scene("そこは幽霊屋敷",
                z.look("家を見て回る"),
                z.look("木造家屋", "二階建て"),
                z.look("ベランダからの景色", "見覚え"),
                z.know("二階"),
                akebi.come("犬粥"),
                z.ask("どうやって二階まで？"),
                akebi.reply("普通に"),
                akebi.do("鍋落とす"),
                z.look("鍋浮かんでいる"),
                akebi.talk("ごめんなさい"),
                akebi.do("鍋", "浮かべて運ぶ"),
                z.think(w.akebi, "能力者"),
                z.ask(w.akebi, "能力？"),
                akebi.reply(w.zenzo, "no"),
                z.look("美味しそうに見える粥"),
                z.do("eat"),
                akebi.talk(w.zenzo, w.i.akebi_history),
                akebi.talk("男運がない"),
                z.talk(akebi, "魅力的だ"),
                ),
            w.scene("告白したら幽霊だった",
                akebi.reply("まだちゃんと付き合ったことない"),
                z.know(w.akebi, w.i.shojo),
                z.talk(w.akebi, w.i.gosteady),
                z.do(w.akebi, w.i.gosteady, "yes"),
                w.zenzo.think(w.akebi, w.i.nohuman.flag()),
                akebi.talk("実は"),
                z.ask(akebi, w.i.akebi_reason),
                w.akebi.reply(w.zenzo, "yes", w.i.nohuman.deflag()),
                akebi.reply("死んだんです"),
                akebi.talk("幽霊なんです"),
                w.zenzo.know(w.akebi, w.i.ghost),
                z.remember(w.i.rumor_ghosthouse.deflag()),
                ),
            ]
    return [w.chaptertitle("美女に出会った"),
            *scenes,
            ]


def ep_bijoghost(w: wd.World):
    z, akebi, murako = w.zenzo, w.akebi, w.murako
    scenes = [
            w.scene("幽霊が美女なら問題ない",
                z.be(w.stage.ghosthome, w.day.meet),
                z.be(w.akebi, w.i.gosteady),
                z.ask(w.akebi, "本当に？"),
                akebi.reply("yes"),
                z.feel("happy"),
                w.zenzo.know(w.akebi, "色々なこと"),
                akebi.ask(z, "幽霊でもいいの？"),
                z.reply("美少女なら問題ない"),
                akebi.feel("happy"),
                w.zenzo.do(w.akebi, w.i.kiss, "$want"),
                z.do("kiss", akebi),
                z.look(akebi, "肌にハリが出る", w.i.akebi_happy.flag()),
                ),
            w.scene("進まない時",
                z.look("wake"),
                z.look("clock", "昨日と同じ"),
                z.ask(akebi, "時間のこと"),
                akebi.reply("わからない"),
                z.be("翌日も同じ"),
                akebi.talk("気にしなくていい"),
                z.do("kiss", akebi),
                z.look("体にカビ"),
                z.think("このままだと死ぬ？"),
                z.ask("外に出る"),
                akebi.reply("また離れていくの？"),
                z.go("夜中"),
                z.go("外"),
                z.meet(murako),
                ),
            w.scene("退魔師も美女",
                murako.talk("退治する"),
                murako.talk(w.i.ghostbuster, z),
                z.explain(murako, akebi),
                murako.talk(akebi, w.i.ghost),
                z.talk(akebi, "悪い奴じゃない"),
                murako.talk("幽霊は悪"),
                murako.talk(z, "幽霊を見られる能力がある"),
                murako.talk(z, w.i.ghost_absorb),
                z.think("自分が窶れている"),
                z.know(w.i.moreusual.deflag(), w.i.allupbusiness.deflag()),
                murako.talk(z, w.i.akebi_buster),
                w.zenzo.ask(w.akebi, w.i.ghost),
                z.ask(murako, w.i.buster_method),
                w.murako.talk(z, w.i.akebi_happy.deflag()),
                murako.reply(z, w.i.break_love),
                z.know(w.i.buster_method),
                ),
            ]
    return [w.chaptertitle("幽霊が美女なら問題ないよね"),
            *scenes,
            ]


# main
def story(w: wd.World):
    return (w.maintitle("第一話　無職が自殺しても問題ないよね？"),
            ep_avant(w),
            ep_meetbijo(w),
            ep_bijoghost(w),
            )


def main(): # pragma: no cover
    import src.yubijo.story as mainstory
    w = mainstory.world()
    return w.build(story(w))


if __name__ == '__main__':
    import sys
    sys.exit(main())

